# Do not modify this file!  It was generated by 'nixos-generate-config'
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
 imports =
   [ 
     ../../modules/system/16gb-swap.nix #swap
     
     (modulesPath + "/installer/scan/not-detected.nix")
   ];

 boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "sd_mod" "sr_mod" ];
 boot.initrd.kernelModules = [ ];
 boot.kernelModules = [ "kvm-intel" ];
 boot.extraModulePackages = [ ];

 fileSystems."/" =
   { device = "/dev/disk/by-uuid/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX";
     fsType = "ext4";
   };

 fileSystems."/home" =
   { device = "/dev/disk/by-uuid/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX";
     fsType = "ext4";
   };

 fileSystems."/boot" =
   { device = "/dev/disk/by-uuid/XXXX-XXXX";
     fsType = "vfat";
     options = [ "fmask=0077" "dmask=0077" ];
   };

 fileSystems."/mnt/12tb" =
   { device = "/dev/disk/by-uuid/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX";
     fsType = "ext4";
   };

 fileSystems."/efi" =
   { device = "/dev/disk/by-uuid/XXXX-XXXX";
     fsType = "vfat";
     options = [ "fmask=0022" "dmask=0022" ];
   };
   
 

 # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
 # (the default) this is the recommended approach. When using systemd-networkd it's
 # still possible to use this option, but it's recommended to use it in conjunction
 # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
 networking.useDHCP = lib.mkDefault true;
 # networking.interfaces.docker0.useDHCP = lib.mkDefault true;
 # networking.interfaces.enp0s20f0u3u3c2.useDHCP = lib.mkDefault true;
 # networking.interfaces.enp0s31f6.useDHCP = lib.mkDefault true;
 # networking.interfaces.tailscale0.useDHCP = lib.mkDefault true;

 nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
 hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}